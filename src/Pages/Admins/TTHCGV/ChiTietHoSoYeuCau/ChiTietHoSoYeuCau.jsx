import clsx from "clsx";
import React, { useEffect } from "react";
import { useState } from "react";

import { FaCaretRight, FaCaretDown } from "react-icons/fa";
import { FaFileDownload } from "react-icons/fa";
import { FaListCheck } from "react-icons/fa6";
import { Link, useParams } from "react-router-dom";
import SidebarTTHCGV from "../Sidebar/SidebarTTHCGV";
import { getHoSoGuiYeuCauById, putHoSoThuTucGuiYeuCauById } from "../../../../Apis/ThuTucHanhChinhGiangVien/apiThuTucHanhChinhGiangVien";
import moment from "moment";
import { sendEmailUserSubmit } from "../../../../Services/Utils/sendEmail";
import { getThanhPhanHoSoGuiYeuCauById } from "../../../../Apis/ThuTucHanhChinhGiangVien/apiThanhPhanHoSo";
import Swal from "sweetalert2";

function ChiTietHoSoYeuCau() {
	const { yeucau, id } = useParams();

	const [showThongTinNguoiNop, setShowThongTinNguoiNop] = useState(true);
	const [showThongTinHoSo, setShowThongTinHoSo] = useState(true);
	const [showXuLyHoSo, setShowXuLyHoSo] = useState(true);
	const [dataDetailYeuCau, setDataDetailYeuCau] = useState(null);
	const [dataDetailTPHSYeuCau, setDataDetailTPHSYeuCauYeuCau] = useState(null);
	const [ngayHenTra, setNgayHenTra] = useState(null);
	const [ngayGiaoTra, setNgayGiaoTra] = useState(null);
	const [hinhThucTra, setHinhThucTra] = useState("");
	const [diaDiemTra, setDiaDiemTra] = useState("");
	const [] = useState("");
	const [testDateTimeLocal, setDateTimeLocal] = useState(null);
	// event handlers

	const handleChangeValue = (e) => {
		const { id, name, value } = e.target;

		if (id == "MC_TTHC_GV_GuiYeuCau_NgayHenTra") {
			let strNgayHenTra = moment(value).format("DD/MM/YYYY HH:mm:ss");
			setNgayHenTra(strNgayHenTra);
		}

		if (id == "NgayGiaoTra") {
			let strNgayGiaoTra = moment(value).format("DD/MM/YYYY HH:mm:ss");
			setNgayGiaoTra(strNgayGiaoTra);
		}

		if (id == "HinhThucTra") {
			setHinhThucTra(value);
		}

		if (id === "MC_TTHC_GV_GuiYeuCau_NoiTraKetQua") {
			setDiaDiemTra(value);
		}

		if (id === "") {
		}
	};

	const handleShowThongTinNguoiNop = () => {
		setShowThongTinNguoiNop(!showThongTinNguoiNop);
	};

	const handleShowThongTinHoSo = () => {
		setShowThongTinHoSo(!showThongTinHoSo);
	};

	const handleShowXuLyHoSo = () => {
		setShowXuLyHoSo(!showXuLyHoSo);
	};

	const handleUpdateYeuCauGui = async (trangThaiID) => {
		if (trangThaiID == 0) {
			Swal.fire({
				title: "H·ªì s∆° y√™u c·∫ßu ch∆∞a ƒë∆∞·ª£c ti·∫øp nh·∫≠n!",
				text: "B·∫°n c√≥ mu·ªën ti·∫øp nh·∫≠n h·ªì s∆° ƒë·ªÉ ti·∫øp t·ª•c x·ª≠ l√Ω y√™u c·∫ßu?",
				icon: "question",
				showCancelButton: true,
				confirmButtonColor: "#3085d6",
				cancelButtonColor: "#d33",
				confirmButtonText: "ƒê·ªìng √Ω",
				cancelButtonText: "H·ªßy",
			}).then((result) => {
				if (result.isConfirmed) {
					const dataUpdateTrangThai = {
						MC_TTHC_GV_GuiYeuCau_TrangThai_ID: 1,
					};
					putHoSoThuTucGuiYeuCauById();
					Swal.fire({
						title: "Th√¥ng b√°o",
						text: "ƒê√£ ti·∫øp nh·∫≠n h·ªì s∆°. Ti·∫øp t·ª•c x·ª≠ l√Ω y√™u c·∫ßu.",
						icon: "success",
						timer: 1500,
					});
				} else {
					return;
				}
			});
		}
	};

	useEffect(() => {
		getHoSoGuiYeuCauById(id)
			.then((result) => {
				if (result.status === 200) {
					setDataDetailYeuCau(result.data?.body[0]);
				}
			})
			.catch((err) => {
				console.log("üöÄ ~ file: ChiTietHoSoYeuCau.jsx:78 ~ useEffect ~ err:", err);
			});

		getThanhPhanHoSoGuiYeuCauById(id)
			.then((result) => {
				if (result.status === 200) {
					setDataDetailTPHSYeuCauYeuCau(result.data?.body);
				}
			})
			.catch((err) => {
				console.log("üöÄ ~ file: ChiTietHoSoYeuCau.jsx:88 ~ useEffect ~ err:", err);
			});
	}, []);

	if (dataDetailYeuCau) {
		return (
			<div className="flex gap-4">
				<SidebarTTHCGV />
				<div className="p-4 bg-white rounded-xl">
					{/* START: Th√¥ng tin ng∆∞·ªùi n·ªôp */}
					<div className="mb-4">
						<div className="flex flex-row items-center gap-2 bg-[#0484AC] text-white font-semibold px-3 py-1 rounded-md mb-4">
							{showThongTinNguoiNop ? (
								<FaCaretDown className="text-white cursor-pointer" onClick={handleShowThongTinNguoiNop} />
							) : (
								<FaCaretRight className="text-white cursor-pointer" onClick={handleShowThongTinNguoiNop} />
							)}
							<h4>Th√¥ng tin ng∆∞·ªùi n·ªôp</h4>
						</div>

						<div className={clsx("grid grid-cols-2 items-center justify-between", showThongTinNguoiNop ? null : "hidden")}>
							<p className="col-span-1 mb-3">
								H·ªç v√† t√™n: <span className="font-semibold">{dataDetailYeuCau?.HoTen}</span>
							</p>
							<p className="col-span-1 mb-3">
								ƒê·ªãa ch·ªâ hi·ªán t·∫°i: <span className="font-semibold">{dataDetailYeuCau?.NoiOHienTai}</span>
							</p>
							<p className="col-span-1 mb-3">
								Ng√†y sinh: <span className="font-semibold">{dataDetailYeuCau?.NgaySinh ? moment(dataDetailYeuCau?.NgaySinh).format("DD/MM/YYYY") : ""}</span>
							</p>
							<p className="col-span-1 mb-3">
								CMTND/CCCD: <span className="font-semibold">{dataDetailYeuCau?.SoCMND}</span>
							</p>
							<p className="col-span-1 mb-3">
								S·ªë ƒëi·ªán tho·∫°i: <span className="font-semibold">{dataDetailYeuCau?.MC_TTHC_GV_GuiYeuCau_NhanSuGui_SDT}</span>
							</p>
							<p className="col-span-1 mb-3">
								Email li√™n h·ªá: <span className="font-semibold">{dataDetailYeuCau?.MC_TTHC_GV_GuiYeuCau_NhanSuGui_Email}</span>
							</p>
							<p className="col-span-1 mb-3">
								Qu√™ qu√°n: <span className="font-semibold">{dataDetailYeuCau?.QueQuan}</span>
							</p>
						</div>
					</div>
					{/* END: Th√¥ng tin ng∆∞·ªùi n·ªôp */}

					{/* START: Th√¥ng tin h·ªì s∆° */}
					<div className="mb-10">
						<div className="flex flex-row items-center gap-2 bg-[#0484AC] text-white font-semibold px-3 py-1 rounded-md mb-4">
							{showThongTinHoSo ? (
								<FaCaretDown className="text-white cursor-pointer" onClick={handleShowThongTinHoSo} />
							) : (
								<FaCaretRight className="text-white cursor-pointer" onClick={handleShowThongTinHoSo} />
							)}
							<h4>Th√¥ng tin h·ªì s∆°</h4>
						</div>

						{/* START: Th√¥ng tin */}
						<div className={clsx("grid grid-cols-2 gap-x-4 items-center justify-between mb-4", showThongTinHoSo ? null : "hidden")}>
							<p className="col-span-1 mb-3">
								T√™n th·ªß t·ª•c: <span className="font-semibold">{dataDetailYeuCau?.MC_TTHC_GV_TenThuTuc}</span>
							</p>
							<p className="col-span-1 mb-3">
								M√£ th·ªß t·ª•c: <span className="font-semibold">{dataDetailYeuCau?.MC_TTHC_GV_MaThuTuc}</span>
							</p>
							<p className="col-span-1 mb-3">
								Ng√†y n·ªôp h·ªì s∆°:{" "}
								<span className="font-semibold">{dataDetailYeuCau?.MC_TTHC_GV_GuiYeuCau_NgayGui && moment(dataDetailYeuCau?.MC_TTHC_GV_GuiYeuCau_NgayGui).format("DD/MM/YYYY")}</span>
							</p>

							<p className="col-span-1 mb-3">
								Ng√†y ti·∫øp nh·∫≠n:{" "}
								<span className="font-semibold">{dataDetailYeuCau?.MC_TTHC_GV_GuiYeuCau_NgayGui && moment(dataDetailYeuCau?.MC_TTHC_GV_GuiYeuCau_NgayGui).format("DD/MM/YYYY")}</span>
							</p>
							<p className="col-span-1 mb-3">
								ƒê∆°n v·ªã ti·∫øp nh·∫≠n: <span className="font-semibold">{dataDetailYeuCau?.MC_TTHC_GV_NoiTiepNhan}</span>
							</p>
							<p className="col-span-1 mb-3">
								Lƒ©nh v·ª±c: <span className="font-semibold">{dataDetailYeuCau?.MC_TTHC_GV_LinhVuc}</span>
							</p>
							<div className="col-span-2">
								<div className="grid grid-cols-2 gap-2 border border-slate-400 p-2">
									<div className="flex flex-col gap-2">
										<p>Ng√†y h·∫πn tr·∫£:</p>
										<input
											type="datetime-local"
											className="p-2 border"
											name="MC_TTHC_GV_GuiYeuCau_NgayHenTra"
											id="MC_TTHC_GV_GuiYeuCau_NgayHenTra"
											onChange={(e) => {
												setNgayHenTra(moment(e.target.value).format("DD/MM/YYYY HH:mm:ss"));
											}}
										/>
									</div>
									<div className="flex flex-col gap-2">
										<p>Ng√†y giao tr·∫£:</p>
										<input
											type="datetime-local"
											className="p-2 border"
											name="NgayGiaoTra"
											id="NgayGiaoTra"
											value={moment(testDateTimeLocal, "DD/MM/YYYY HH:mm:ss").format("YYYY-MM-DDTHH:mm")}
											onChange={(e) => {
												setDateTimeLocal(moment(e.target.value).format("DD/MM/YYYY HH:mm:ss"));
											}}
										/>
									</div>
									<div className="flex flex-col gap-2">
										<p>H√¨nh th·ª©c giao tr·∫£:</p>
										<select className="p-2 border focus:outline-slate-400" name="HinhThucTra" id="HinhThucTra">
											<option value="">Ch·ªçn h√¨nh th·ª©c giao tr·∫£</option>
											<option value="">Tr·∫£ online - Qua Email</option>
											<option value="">Tr·∫£ tr·ª±c ti·∫øp</option>
										</select>
									</div>
									<div className="flex flex-col gap-2">
										<p>ƒê·ªãa ƒëi·ªÉm giao tr·∫£:</p>
										<select className="p-2 border focus:outline-slate-400" name="MC_TTHC_GV_GuiYeuCau_NoiTraKetQua" id="MC_TTHC_GV_GuiYeuCau_NoiTraKetQua">
											<option value="">Ch·ªçn ƒë·ªãa ƒëi·ªÉm giao tr·∫£</option>
											<option value="1 - Minh Khai">1 - Minh Khai</option>
											<option value="2 - Lƒ©nh Nam">2 - Lƒ©nh Nam</option>
											<option value="3 - Nam ƒê·ªãnh">3 - Nam ƒê·ªãnh</option>
										</select>
									</div>
									<div className="flex flex-col gap-2 col-span-2">
										<p>Ghi ch√∫:</p>
										<textarea
											className="border border-slate-400 focus:outline-slate-500 p-2"
											placeholder="Nh·∫≠p m√¥ t·∫£ th√¥ng b√°o"
											name="MC_TTHC_GV_GuiYeuCau_TrangThai_GhiChu"
											id="MC_TTHC_GV_GuiYeuCau_TrangThai_GhiChu"
											rows={4}
										></textarea>
									</div>
									<div className="col-span-1 flex flex-col gap-2">
										<button
											type="button"
											onClick={() => {
												handleUpdateYeuCauGui(dataDetailYeuCau?.MC_TTHC_GV_GuiYeuCau_TrangThai_ID);
											}}
											className="border p-2 rounded-xl font-medium bg-[#336699] text-white hover:opacity-70"
										>
											C·∫≠p nh·∫≠t
										</button>
									</div>
								</div>
							</div>
						</div>

						{/* START: Th√†nh ph·∫ßn h·ªì show */}
						<div className="w-full">
							<table className="w-full">
								<thead className="bg-[#075985] text-white ">
									<tr>
										<th className="border-r px-2 py-1 rounded-tl-xl">STT</th>
										<th className="border-r px-2 py-1">T√™n gi·∫•y t·ªù</th>
										<th className="border-r px-2 py-1 rounded-tr-xl">Gi·∫•y t·ªù k√®m theo</th>
									</tr>
								</thead>
								<tbody>
									{dataDetailTPHSYeuCau &&
										dataDetailTPHSYeuCau?.map((iTPHSYeuCau, index) => {
											return (
												<tr className="border" key={index}>
													<td className="border-r px-2 py-1 text-center">{index + 1}</td>
													<td className="border-r px-2 py-1">
														<p className="">{iTPHSYeuCau?.MC_TTHC_GV_ThanhPhanHoSo_TenGiayTo}</p>
													</td>
													<td className="border-r px-2 py-1 text-center">
														<p className="">
															<Link to={iTPHSYeuCau?.MC_TTHC_GV_ThanhPhanHoSo_GuiYeuCau_TenFile} target="_blank" className="text-[#336699] font-medium">
																Xem
															</Link>
														</p>
													</td>
												</tr>
											);
										})}
								</tbody>
							</table>
						</div>
					</div>
					{/* END: Th√¥ng tin h·ªì s∆° */}

					{/* START: X·ª≠ l√Ω h·ªì s∆° */}
					<div className="mb-4">
						<div className="tabs__xulyhoso flex flex-row gap-4 border-b pb-2 mb-4">
							<button
								type="button"
								onClick={handleShowXuLyHoSo}
								className={clsx(
									"px-3 py-1 rounded-md flex flex-row items-center gap-2 cursor-pointer hover:opacity-70",
									showXuLyHoSo ? "bg-[#0484AC] text-white" : "border border-[#0484AC] text-[#336699]"
								)}
							>
								<FaFileDownload />
								X·ª≠ l√Ω h·ªì s∆°
							</button>
							<button
								type="button"
								onClick={handleShowXuLyHoSo}
								className={clsx(
									"px-3 py-1 rounded-md flex flex-row items-center gap-2 cursor-pointer hover:opacity-70",
									showXuLyHoSo ? "border border-[#0484AC] text-[#336699]" : "bg-[#0484AC] text-white"
								)}
							>
								<FaListCheck />
								Qu√° tr√¨nh x·ª≠ l√Ω h·ªì s∆°
							</button>
						</div>
						{showXuLyHoSo ? (
							<div className="flex flex-row items-center gap-4">
								<button type="button" className="px-3 py-1 text-white rounded-lg font-semibold hover:opacity-70 bg-[#D85D17]">
									Chuy·ªÉn b∆∞·ªõc tr∆∞·ªõc
								</button>
								<button type="button" className="px-3 py-1 text-white rounded-lg font-semibold hover:opacity-70 bg-[#70C788]">
									Chuy·ªÉn b∆∞·ªõc ti·∫øp
								</button>
								<button type="button" className="px-3 py-1 text-white rounded-lg font-semibold hover:opacity-70 bg-[#FF0000]">
									H·ªßy/tr·∫£ h·ªì s∆°
								</button>
								<button type="button" className="px-3 py-1 text-white rounded-lg font-semibold hover:opacity-70 bg-[#D85D17]">
									D·ª´ng th·ª±c hi·ªán
								</button>
							</div>
						) : (
							<div className="flex flex-col gap-2">
								<div className="flex flex-col border-b pb-1">
									<p>
										<span className="underline">Nh√¢n s·ª± x·ª≠ l√Ω:</span> T·ªëng B√° Quang Anh: <span className="font-bold text-[#ff0000]">Ti·∫øp nh·∫≠n h·ªì s∆°</span>
									</p>
									<small>27/11/2023 02:27 PM</small>
								</div>
								<div className="flex flex-col border-b pb-1">
									<p>
										<span className="underline">Nh√¢n s·ª± x·ª≠ l√Ω:</span> T·ªëng B√° Quang Anh: <span className="font-bold text-[#ff0000]">X·ª≠ l√Ω h·ªì s∆°</span>
									</p>
									<small>27/11/2023 02:27 PM</small>
								</div>
								<div className="flex flex-col border-b pb-1">
									<p>
										<span className="underline">Nh√¢n s·ª± x·ª≠ l√Ω:</span> T·ªëng B√° Quang Anh: <span className="font-bold text-[#ff0000]">Tr·∫£ k·∫øt qu·∫£</span>
									</p>
									<small>27/11/2023 02:27 PM</small>
								</div>
							</div>
						)}
					</div>
					{/* END: X·ª≠ l√Ω h·ªì s∆° */}
				</div>
			</div>
		);
	} else {
		return <p className="px-3 py-1 rounded-md bg-white text-red-500 text-center font-semibold">Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu y√™u c·∫ßu h·ª£p l·ªá.</p>;
	}
}

export default ChiTietHoSoYeuCau;
